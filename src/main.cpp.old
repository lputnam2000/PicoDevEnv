#include <stdio.h>
#include "pico/stdlib.h"
#include "hardware/spi.h"
#include "hardware/pwm.h"
#include "st7789.h"

// Pin definitions
#define PIN_BL 0
#define PIN_CLK 2
#define PIN_MOSI 3
#define PIN_CS 5
#define PIN_DC 7
#define PIN_RST 8

// SPI port to use
#define SPI_PORT spi0

void play_tone(uint pin, uint frequency, uint duration_ms) {
    // Set PWM frequency and duty cycle for piezo
    uint slice_num = pwm_gpio_to_slice_num(pin);
    pwm_config config = pwm_get_default_config();
    
    // Set the PWM frequency
    pwm_config_set_clkdiv(&config, 125.0f);  // Clock divider (default works for most cases)
    pwm_init(slice_num, &config, true);
    
    // Set GPIO function to PWM
    gpio_set_function(pin, GPIO_FUNC_PWM);
    
    uint32_t top_value = (125000000 / frequency) - 1;  // Frequency divisor
    pwm_set_wrap(slice_num, top_value);
    pwm_set_chan_level(slice_num, pwm_gpio_to_channel(pin), top_value / 2);  // 50% duty cycle
    
    // Play the tone for the specified duration
    sleep_ms(duration_ms);
    
    // Turn off PWM
    pwm_set_chan_level(slice_num, pwm_gpio_to_channel(pin), 0);
}

int main() {
    constexpr auto LED_PIN = 25;
    constexpr auto PIEZO_PIN = 15;

    gpio_init(LED_PIN);
    gpio_set_dir(LED_PIN, GPIO_OUT);

    gpio_init(PIEZO_PIN);
    gpio_set_dir(PIEZO_PIN, GPIO_OUT);

    while (true) {
        // Blink the LED
        gpio_put(LED_PIN, 1);  // Turn on LED
        play_tone(PIEZO_PIN, 1000, 500);  // Play 1 kHz tone for 500ms
        sleep_ms(500);  // LED stays on for 500ms

        gpio_put(LED_PIN, 0);  // Turn off LED
        sleep_ms(500);  // LED stays off for 500ms
    }

    return 0;


    


    // // Initialize the ST7789 driver with a blank screen
    // uint16_t frame_buffer[240 * 320] = {0}; // Frame buffer for 240x320 resolution, initially black
    // St7789 display(240, 320, frame_buffer, SPI_PORT, PIN_DC, PIN_RST, PIN_CLK, PIN_MOSI, PIN_CS);
    // display.init();



    // // Blink the backlight every 5 seconds
    // while (true) {
    //   // Fill the screen with white
    //   for (int y = 0; y < 320; y++) {
    //       for (int x = 0; x < 240; x++) {
    //           frame_buffer[y * 240 + x] = 0xFFFF; // White color in RGB565 format
    //       }
    //   }
    //   display.update();
    // }
}
